/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
     //Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

mainClassName = "DiscordBot_v1.me.com.main.Main"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
    maven {
    url 'https://m2.dv8tion.net/releases'
  	}
}

configurations {
    externalLibs
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation("net.dv8tion:JDA:4.4.0_350")
    implementation 'com.sedmelluq:lavaplayer:1.3.77'
    //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    //compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    //classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    api 'org.apache.commons:commons-math3:3.6.1'
 
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'
 
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
     
    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
     
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
     
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
     
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
     
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
    
   //external libs, for example: xxx.dll
   externalLibs files('xxxExternalLib1, xxxExternalLib2')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

shadowJar{
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
  archiveFileName = "${baseName}.${extension}"
}

jar {
    manifest {
        attributes(
            'Main-Class': 'DiscordBot_v1.me.com.main.Main',
            "Multi-Release": true
        )
    }
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }        
    from configurations.externalLibs.collect { it }
}